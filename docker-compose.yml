version: '3'
services:
  mysql-docker:
    image: mysql:5.7
    ports:
      - "9001:3306"
    volumes:
      - ./src/test/resources/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_DATABASE: es_kafka
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
  flyway-clean-migrate:
    image: boxfuse/flyway:5.1.4
    volumes:
      - ./src/main/resources/db/migration/*
    depends_on:
      - mysql-docker
    command: clean flywaymigrate

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "com.in.eskafka:1:1"

volumes:
  elasticsearch-data:
    driver: local